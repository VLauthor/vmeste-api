generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id       Int              @id @default(autoincrement())
  last_name     String
  first_name    String
  patronomic    String?
  mail          String           @unique
  nickname      String           @unique
  gender        Boolean          @default(true)
  role_id Int @default(1)
  verified Boolean @default(false)
  date_registration DateTime @default(now())
  role  Role @relation(fields: [role_id], references: [id])
  date_birthday DateTime
  password_hash String
  telegram      Telegram_Users[]
  code          Code[]
  notes         Notes[]
  reminders Reminders[]
  userAnswors UserAnswors[]
  quiz Quiz[]
}

model Role {
  id Int @id @default(autoincrement())
  role String
  Users Users[]
}

model Telegram_Users {
  node_id          Int     @id @default(autoincrement())
  user_tg_id       BigInt? @unique
  user_id          Int     @unique
  first_name       String?
  last_name        String?
  username         String?
  photo_mini_url   String?
  photo_medium_url String?
  photo_max_url    String?
  bio              String?
  user             Users?  @relation(fields: [user_id], references: [user_id])
}

model Code {
  node_id     Int       @id @default(autoincrement())
  user_id     Int       @unique
  key         String
  date_create DateTime? @default(now())
  user        Users     @relation(fields: [user_id], references: [user_id])
}

model Notes {
  notes_id    Int    @id @default(autoincrement())
  user_id     Int
  name        String
  description String
  user        Users  @relation(fields: [user_id], references: [user_id])
}

model Reminders {
  reminders_id Int @id @default(autoincrement())
  user_id Int
  name String
  time DateTime
  description String?
  user Users @relation(fields: [user_id], references: [user_id])
}

model Quiz {
  quiz_id Int @id @default(autoincrement())
  author_id Int
  title String
  description String
  private Boolean @default(false)
  key String?
  question Questions[]
  author Users @relation(fields: [author_id], references: [user_id])
}

model Questions{
  question_id Int @id @default(autoincrement())
  quiz_id Int
  title String
  quiz Quiz @relation(fields: [quiz_id], references: [quiz_id])
  answers Answers[]
  userAnswors UserAnswors[]
}

model Answers {
  answer_id Int @id @default(autoincrement())
  question_id Int
  title String
  correct Boolean @default(false)
  question Questions @relation(fields: [question_id], references: [question_id])
  userAnswors UserAnswors[]
}

model UserAnswors {
  node_id Int @id @default(autoincrement())
  user_id Int
  question_id Int
  answer_id Int
  user Users @relation(fields: [user_id], references: [user_id])
  question Questions @relation(fields: [question_id], references: [question_id])
  answers Answers @relation(fields: [answer_id], references: [answer_id])
}

